(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{293:function(s,a,n){"use strict";n.r(a);var e=n(10),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("PM2是node进程管理工具，可以利用它来简化很多node应用管理的繁琐任务，如性能监控、自动重启、负载均衡等，而且使用比较简单。")]),s._v(" "),a("h2",{attrs:{id:"全局安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局安装"}},[s._v("#")]),s._v(" 全局安装")]),s._v(" "),a("p",[a("code",[s._v("sudo npm install pm2@latest -g")])]),s._v(" "),a("h2",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),a("ul",[a("li",[s._v("启用应用: pm2 start app.js")]),s._v(" "),a("li",[s._v("停止：pm2 stop app_name|app_id")]),s._v(" "),a("li",[s._v("删除：pm2 delete app_name|app_id")]),s._v(" "),a("li",[s._v("重启：pm2 restart app_name|app_id")]),s._v(" "),a("li",[s._v("停止所有：pm2 stop all")]),s._v(" "),a("li",[s._v("查看所有的进程：pm2 list")]),s._v(" "),a("li",[s._v("查看所有的进程状态：pm2 status")]),s._v(" "),a("li",[s._v("查看某一个进程的信息：pm2 describe app_name|app_id")])]),s._v(" "),a("h2",{attrs:{id:"参数说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数说明"}},[s._v("#")]),s._v(" 参数说明")]),s._v(" "),a("ul",[a("li",[s._v("--watch：监听应用目录源码的变化，一旦发生变化，自动重启。如果要精确监听、不见听的目录，最好通过配置文件")]),s._v(" "),a("li",[s._v("-i --instances：启用多少个实例，可用于负载均衡。如果-i 0或者-i max，则根据当前机器核数确定实例数目，可以弥补node.js缺陷")]),s._v(" "),a("li",[s._v('--ignore-watch：排除监听的目录/文件，可以是特定的文件名，也可以是正则。比如--ignore-watch="test node_modules "some scripts"')]),s._v(" "),a("li",[s._v("-n --name：应用的名称。查看应用信息的时候可以用到")]),s._v(" "),a("li",[s._v("-o --output "),a("path",[s._v("：标准输出日志文件的路径，有默认路径")])]),s._v(" "),a("li",[s._v("-e --error "),a("path",[s._v("：错误输出日志文件的路径，有默认路径")])]),s._v(" "),a("li",[s._v("--interpreter "),a("interpreter",[s._v("：the interpreter pm2 should use for")])],1),s._v(" "),a("li",[s._v("executing app (bash, python...)。比如你用的coffee script来编写应用\n完整参数命令： pm2 start index.js --watch -i 2")])]),s._v(" "),a("h2",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),a("p",[s._v("配置文件里的设置项，跟命令行参数基本是一一对应的\n配置文件的格式可以为json/yaml\njson格式的配置文件，pm2当作普通的js文件来处理，所以可以在里面添加注释或者编写代码，这对于动态调整配置很有好处\n如果启动的时候指定了配置文件，那么命令行参数会被忽略（个别参数除外，比如--env）")]),s._v(" "),a("h3",{attrs:{id:"完整参数单个app配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整参数单个app配置"}},[s._v("#")]),s._v(" 完整参数单个app配置：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "name"             : "node-app", //启动app名称\n  "cwd"              : "/srv/node-app/current", \n  "args"             : ["--toto=heya coco", "-d", "1"],\n  "script"           : "bin/app.js",\n  "node_args"        : ["--harmony", " --max-stack-size=102400000"],\n  "log_date_format"  : "YYYY-MM-DD HH:mm Z",\n  "error_file"       : "/var/log/node-app/node-app.stderr.log",\n  "out_file"         : "log/node-app.stdout.log",\n  "pid_file"         : "pids/node-geo-api.pid",\n  "instances"        : 6, //or 0 => \'max\'\n  "min_uptime"       : "200s", // 200 seconds, defaults to 1000\n  "max_restarts"     : 10, // defaults to 15\n  "max_memory_restart": "1M", // 1 megabytes, e.g.: "2G", "10M", "100K", 1024 the default unit is byte.\n  "cron_restart"     : "1 0 * * *",\n  "watch"            : false,\n  "ignore_watch"      : ["[\\\\/\\\\\\\\]\\\\./", "node_modules"],\n  "merge_logs"       : true,\n  "exec_interpreter" : "node",\n  "exec_mode"        : "fork",\n  "autorestart"      : false, // enable/disable automatic restart when an app crashes or exits\n  "vizion"           : false, // enable/disable vizion features (versioning control)\n  // Default environment variables that will be injected in any environment and at any start\n  "env": {\n    "NODE_ENV": "production",\n    "AWESOME_SERVICE_API_TOKEN": "xxx"\n  }\n  "env_*" : {\n    "SPECIFIC_ENV" : true\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h2",{attrs:{id:"完整配置文件写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整配置文件写法"}},[s._v("#")]),s._v(" 完整配置文件写法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "apps" : [{\n    // Application #1\n    "name"        : "worker-app",\n    "script"      : "worker.js",\n    "args"        : ["--toto=heya coco", "-d", "1"],\n    "watch"       : true,\n    "node_args"   : "--harmony",\n    "merge_logs"  : true,\n    "cwd"         : "/this/is/a/path/to/start/script",\n    "env": {\n      "NODE_ENV": "development",\n      "AWESOME_SERVICE_API_TOKEN": "xxx"\n    },\n    "env_production" : {\n       "NODE_ENV": "production"\n    },\n    "env_staging" : {\n       "NODE_ENV" : "staging",\n       "TEST"     : true\n    }\n  },{\n    // Application #2\n    "name"       : "api-app",\n    "script"     : "api.js",\n    "instances"  : 4,\n    "exec_mode"  : "cluster_mode",\n    "error_file" : "./examples/child-err.log",\n    "out_file"   : "./examples/child-out.log",\n    "pid_file"   : "./examples/child.pid"\n  }]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("h2",{attrs:{id:"通过yaml管理多个应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过yaml管理多个应用"}},[s._v("#")]),s._v(" 通过yaml管理多个应用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("process.yml:\napps:\n  - script   : app.js\n    instances: 4\n    exec_mode: cluster\n  - script : worker.js\n    watch  : true\n    env    :\n      NODE_ENV: development\n    env_production:\n      NODE_ENV: production\n\n启动：pm2 start process.yml\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"环境切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境切换"}},[s._v("#")]),s._v(" 环境切换")]),s._v(" "),a("p",[s._v("正式开发中分为不同的环境(开发环境、测试环境、生产环境)，我们需要根据不同的情景来切换各种环境\npm2通过在配置文件中通过env_xx来声明不同环境的配置，然后在启动应用时，通过--env参数指定运行的环境\n环境配置定义，在应用中，可以通过process.env.REMOTE_ADDR等来读取配置中生命的变量：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('"env": {\n    "NODE_ENV": "production",\n    "REMOTE_ADDR": "http://www.example.com/"\n  },\n  "env_dev": {\n    "NODE_ENV": "development",\n    "REMOTE_ADDR": "http://wdev.example.com/"\n  },\n  "env_test": {\n    "NODE_ENV": "test",\n    "REMOTE_ADDR": "http://wtest.example.com/"\n  }\n启动指定的环境：pm2 start app.js --env development\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[s._v("#")]),s._v(" 负载均衡")]),s._v(" "),a("p",[s._v("pm2 start app.js -i 3 # 开启三个进程\npm2 start app.js -i max # 根据机器CPU核数，开启对应数目的进程")]),s._v(" "),a("h2",{attrs:{id:"开机自动启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开机自动启动"}},[s._v("#")]),s._v(" 开机自动启动")]),s._v(" "),a("ol",[a("li",[s._v("通过pm2 save保存当前进程状态。")]),s._v(" "),a("li",[s._v("通过pm2 startup [platform]生成开机自启动的命令。例如：pm2 startup centeros")]),s._v(" "),a("li",[s._v("将步骤2生成的命令，粘贴到控制台进行，搞定。")])]),s._v(" "),a("h2",{attrs:{id:"更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[s._v("#")]),s._v(" 更新")]),s._v(" "),a("p",[s._v("安装最新的：npm install pm2@latest -g\n然后在内存中更新：pm2 update")]),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("ul",[a("li",[s._v("官方文档1："),a("a",{attrs:{href:"http://pm2.keymetrics.io/docs/usage/pm2-doc-single-page/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://pm2.keymetrics.io/docs/usage/pm2-doc-single-page/"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("官方文档2："),a("a",{attrs:{href:"http://pm2.keymetrics.io/docs/usage/quick-start/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://pm2.keymetrics.io/docs/usage/quick-start/"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("PM2实用入门指南："),a("a",{attrs:{href:"http://www.cnblogs.com/chyingp/p/pm2-documentation.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://www.cnblogs.com/chyingp/p/pm2-documentation.html"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=t.exports}}]);