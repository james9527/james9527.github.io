(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{319:function(t,s,a){"use strict";a.r(s);var n=a(10),v=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"表达式-还会短路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式-还会短路"}},[t._v("#")]),t._v(" 表达式&&还会短路？")]),t._v(" "),s("p",[t._v("你是否看一眼就知道表达式"),s("code",[t._v("console.log(1&&2)")]),t._v("的输出结果？如果是，以下内容可以不用看了。本文只是围绕这一问题由点及面展开了一些基础知识点的整理，方便后续查阅。")]),t._v(" "),s("h2",{attrs:{id:"首先抛出一些基础题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首先抛出一些基础题"}},[t._v("#")]),t._v(" 首先抛出一些基础题")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 + 20")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false（ 分解：(3>2)>1 => true>1 => false）")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object" // 因null的二进制前三位都为0')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// true // 因"2"的字符编码是50，"3"的字符编码是51')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("p",[t._v("由以上可知，可总结出以下结果：")]),t._v(" "),s("ul",[s("li",[t._v("逻辑运算符“||”和“&&”都是遵行短路原则，只要确定符号前面的真假，既可确定返回值，故表达式"),s("code",[t._v("console.log(1&&2)")]),t._v("的值为2。")]),t._v(" "),s("li",[t._v("对于typeof null为object的理解，因为不同的对象在底层都表示为二进制，在JS中二进制前三位都为 0 的话会被判断为 object 类型，null 的二进制表示是全 0，自然前三位也是 0，所以执行 typeof 时会返回“ object ”。")]),t._v(" "),s("li",[t._v("左右两个操作数都是字符串进行大小比较时，此时比较的是字符编码；")])]),t._v(" "),s("h2",{attrs:{id:"js表达式和运算符分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js表达式和运算符分类"}},[t._v("#")]),t._v(" JS表达式和运算符分类")]),t._v(" "),s("blockquote",[s("p",[t._v("运算符的优先级决定了表达式中运算执行的先后顺序，优先级高的运算符最先被执行。以下将详细介绍表达式的分类和优先级：")])]),t._v(" "),s("h3",{attrs:{id:"主要表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要表达式"}},[t._v("#")]),t._v(" 主要表达式")]),t._v(" "),s("p",[t._v("JavaScript中基本关键字和常用表达式：")]),t._v(" "),s("ul",[s("li",[t._v("this，this关键字指向函数的执行上下文。")]),t._v(" "),s("li",[t._v("function，function关键字定义了函数表达式。")]),t._v(" "),s("li",[t._v("class 关键字定义了类表达式。")]),t._v(" "),s("li",[t._v("function*，function* 关键字定义了一个 generator 函数表达式。")]),t._v(" "),s("li",[t._v("yield，暂停和恢复generator函数。")]),t._v(" "),s("li",[t._v("yield*，委派给另外一个generator函数或可迭代的对象。")]),t._v(" "),s("li",[t._v("async function，async function 定义一个异步函数表达式。")]),t._v(" "),s("li",[t._v("await，暂停或恢复执行异步函数，并等待promise的resolve/reject回调。")]),t._v(" "),s("li",[t._v("[]，数组初始化/字面量语法。")]),t._v(" "),s("li",[t._v("{}，对象初始化/字面量语法。")]),t._v(" "),s("li",[t._v("/ab+c/i，正则表达式字面量语法。")]),t._v(" "),s("li",[t._v("()，分组操作符。")])]),t._v(" "),s("h3",{attrs:{id:"左表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#左表达式"}},[t._v("#")]),t._v(" 左表达式")]),t._v(" "),s("p",[t._v("左边的值是赋值的目标。")]),t._v(" "),s("ul",[s("li",[t._v("「属性访问符」成员运算符提供了对对象的属性或方法的访问("),s("code",[t._v("object.property")]),t._v(" 和 "),s("code",[t._v('object["property"]')]),t._v(")。")]),t._v(" "),s("li",[t._v("new运算符创建了构造函数实例。")]),t._v(" "),s("li",[t._v("「new.target」在构造器中，new.target指向new调用的构造器。")]),t._v(" "),s("li",[t._v("super关键字调用父类的构造器。")]),t._v(" "),s("li",[t._v("「...obj」展开运算符可以将一个可迭代的对象在函数调用的位置展开成为多个参数,或者在数组字面量中展开成多个数组元素。")])]),t._v(" "),s("h3",{attrs:{id:"自增和自减"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自增和自减"}},[t._v("#")]),t._v(" 自增和自减")]),t._v(" "),s("p",[t._v("前置/后置自增运算符和前置/后置自减运算符（A++, A--, ++A, --A）。")]),t._v(" "),s("h3",{attrs:{id:"一元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符"}},[t._v("#")]),t._v(" 一元运算符")]),t._v(" "),s("p",[t._v("一元运算符只有一个操作数。")]),t._v(" "),s("ul",[s("li",[t._v("delete 运算符用来删除对象的属性。")]),t._v(" "),s("li",[t._v("void 运算符表示表达式放弃返回值。")]),t._v(" "),s("li",[t._v("typeof 运算符用来判断给定对象的类型。")]),t._v(" "),s("li",[t._v("「+」一元加运算符将操作转换为Number类型。")]),t._v(" "),s("li",[t._v("「-」一元减运算符将操作转换为Number类型并取反。")]),t._v(" "),s("li",[t._v("「~」按位非运算符。")]),t._v(" "),s("li",[t._v("「!」逻辑非运算符。")])]),t._v(" "),s("h3",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("p",[t._v("算术运算符以二个数值（字面量或变量）作为操作数，并返回单个数值。有加(+)、减(-)、乘(*)、除(/) 和 取模(%)这些运算符。")]),t._v(" "),s("h3",{attrs:{id:"关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("#")]),t._v(" 关系运算符")]),t._v(" "),s("p",[t._v("比较运算符比较二个操作数并返回基于比较结果的Boolean值。")]),t._v(" "),s("ul",[s("li",[t._v("in运算符用来判断对象是否拥有给定属性。")]),t._v(" "),s("li",[t._v("instanceof 运算符判断一个对象是否是另一个对象的实例。")]),t._v(" "),s("li",[t._v("大于(>)、大于等于(>=)、小于(<)、小于等于(<=)。")])]),t._v(" "),s("h3",{attrs:{id:"相等运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相等运算符"}},[t._v("#")]),t._v(" 相等运算符")]),t._v(" "),s("p",[t._v("如果相等，操作符返回的是Boolean(布尔)类型的true，否则是false。有相等(==)、不等(!=)、全等(===)、非全等(!==)这些运算符。")]),t._v(" "),s("h3",{attrs:{id:"位移运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位移运算符"}},[t._v("#")]),t._v(" 位移运算符")]),t._v(" "),s("p",[t._v("在二进制的基础上对数字进行移动操作。有按位左移(<<)、按位右移(>>)、按位无符号右移(>>>)这些运算符。")]),t._v(" "),s("h3",{attrs:{id:"二进制位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二进制位运算符"}},[t._v("#")]),t._v(" 二进制位运算符")]),t._v(" "),s("p",[t._v("二进制运算符将它们的操作数作为32个二进制位（0或1）的集合，并返回标准的JavaScript数值。有二进制位与(&)、二进制位或(|)、二进制位异或(^)这些运算符。")]),t._v(" "),s("h3",{attrs:{id:"二元逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二元逻辑运算符"}},[t._v("#")]),t._v(" 二元逻辑运算符")]),t._v(" "),s("p",[t._v("逻辑运算符典型的用法是用于boolean(逻辑)值运算, 它们返回boolean值。有逻辑与(&&)、逻辑或(||)这些运算符。它们都遵行短路原则，只要确定符号前面的真假，既可确定返回值，总结如下：")]),t._v(" "),s("ul",[s("li",[t._v("只要“||”前面为false，无论“||”后面是true还是false，结果都返回【“||”后面】的值。")]),t._v(" "),s("li",[t._v("只要“||”前面为true，无论“||”后面是true还是false，结果都返回【“||”前面】的值。")]),t._v(" "),s("li",[t._v("只要“&&”前面是false，无论“&&”后面是true还是false，结果都将返【“&&”前面】的值。")]),t._v(" "),s("li",[t._v("只要“&&”前面是true，无论“&&”后面是true还是false，结果都将返【“&&”后面】的值。")])]),t._v(" "),s("h3",{attrs:{id:"条件-三元-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件-三元-运算符"}},[t._v("#")]),t._v(" 条件(三元)运算符")]),t._v(" "),s("p",[t._v("条件元素运算符把两个结果中其中一个符合运算逻辑的值返回"),s("code",[t._v("(condition ? ifTrue : ifFalse)")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("p",[t._v("赋值元素符会将右边的操作数的值分配给左边的操作数，并将其值修改为右边操作数相等的值。有赋值运算符(=)、赋值求和(+=)、左位移(<<=)等运算符（"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看更多"),s("OutboundLink")],1),t._v("），赋值符号经典用法：")]),t._v(" "),s("ul",[s("li",[t._v("数组交换值：[a, b] = [1, 2]")]),t._v(" "),s("li",[t._v("结构赋值：const {name, age} = { name: 'james9527', age: 18 }")])]),t._v(" "),s("h3",{attrs:{id:"逗号操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逗号操作符"}},[t._v("#")]),t._v(" 逗号操作符")]),t._v(" "),s("p",[t._v("「,」逗号操作符允许在一个判断状态中有多个表达式去进行运算并且最后返回最后一个表达式的值。")]),t._v(" "),s("h2",{attrs:{id:"运算符优先级汇总表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级汇总表"}},[t._v("#")]),t._v(" 运算符优先级汇总表")]),t._v(" "),s("blockquote",[s("p",[t._v("下面的表将所有运算符按照优先级的不同从高（20）到低（0）排列，大部分运算符都是从左到右的顺序执行，部分从右到左，如赋值=、+=等运算符。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("优先级")]),t._v(" "),s("th",[t._v("运算类型")]),t._v(" "),s("th",[t._v("关联性")]),t._v(" "),s("th",[t._v("运算符")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("20")]),t._v(" "),s("td",[t._v("圆括号")]),t._v(" "),s("td",[t._v("n/a（不相关）")]),t._v(" "),s("td",[t._v("( … )")])]),t._v(" "),s("tr",[s("td",[t._v("19")]),t._v(" "),s("td",[t._v("成员访问")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… . …")])]),t._v(" "),s("tr",[s("td",[t._v("19")]),t._v(" "),s("td",[t._v("需计算的成员访问")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… [ … ]")])]),t._v(" "),s("tr",[s("td",[t._v("19")]),t._v(" "),s("td",[t._v("new (带参数列表)")]),t._v(" "),s("td",[t._v("n/a")]),t._v(" "),s("td",[t._v("new … ( … )")])]),t._v(" "),s("tr",[s("td",[t._v("19")]),t._v(" "),s("td",[t._v("函数调用")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… ( … )")])]),t._v(" "),s("tr",[s("td",[t._v("18")]),t._v(" "),s("td",[t._v("new (无参数列表)")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("new …")])]),t._v(" "),s("tr",[s("td",[t._v("17")]),t._v(" "),s("td",[t._v("后置递增(运算符在后)")]),t._v(" "),s("td",[t._v("n/a")]),t._v(" "),s("td",[t._v("… ++")])]),t._v(" "),s("tr",[s("td",[t._v("17")]),t._v(" "),s("td",[t._v("后置递减(运算符在后)")]),t._v(" "),s("td",[t._v("n/a")]),t._v(" "),s("td",[t._v("… --")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("前置递增/递减")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("++/-- …")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("逻辑非")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("! …")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("按位非")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("~ …")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("一元加法/减法")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("+/- …")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("typeof/void/delete/await")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("typeof/void/delete/await …")])]),t._v(" "),s("tr",[s("td",[t._v("15")]),t._v(" "),s("td",[t._v("幂")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("… ** …")])]),t._v(" "),s("tr",[s("td",[t._v("14")]),t._v(" "),s("td",[t._v("乘法")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… * …")])]),t._v(" "),s("tr",[s("td",[t._v("14")]),t._v(" "),s("td",[t._v("除法")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… / …")])]),t._v(" "),s("tr",[s("td",[t._v("14")]),t._v(" "),s("td",[t._v("取模")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… % …")])]),t._v(" "),s("tr",[s("td",[t._v("13")]),t._v(" "),s("td",[t._v("加法")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… + …")])]),t._v(" "),s("tr",[s("td",[t._v("13")]),t._v(" "),s("td",[t._v("减法")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… - …")])]),t._v(" "),s("tr",[s("td",[t._v("12")]),t._v(" "),s("td",[t._v("按位左移")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… << …")])]),t._v(" "),s("tr",[s("td",[t._v("12")]),t._v(" "),s("td",[t._v("按位右移")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… >> …")])]),t._v(" "),s("tr",[s("td",[t._v("11")]),t._v(" "),s("td",[t._v("小于（等于）")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… <(<=) …")])]),t._v(" "),s("tr",[s("td",[t._v("11")]),t._v(" "),s("td",[t._v("大于（等于）")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… >(>=) …")])]),t._v(" "),s("tr",[s("td",[t._v("11")]),t._v(" "),s("td",[t._v("in")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… in …")])]),t._v(" "),s("tr",[s("td",[t._v("11")]),t._v(" "),s("td",[t._v("instanceof")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… instanceof …")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("等号")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… == …")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("非等号")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… !== …")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("全等号")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… === …")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("非全等号")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… !== …")])]),t._v(" "),s("tr",[s("td",[t._v("9")]),t._v(" "),s("td",[t._v("按位与")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… & …")])]),t._v(" "),s("tr",[s("td",[t._v("8")]),t._v(" "),s("td",[t._v("按位异或")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… ^ …")])]),t._v(" "),s("tr",[s("td",[t._v("7")]),t._v(" "),s("td",[t._v("按位或")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… 单竖线 …")])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("逻辑与")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… && …")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("逻辑或")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… 双竖线 …")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("条件运算符")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("… ? … : …")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("赋值")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("… =(+=/-=/%=/&=/<<=/...) …")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("yield(*)")]),t._v(" "),s("td",[t._v("从右到左")]),t._v(" "),s("td",[t._v("yield …")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("展开运算符")]),t._v(" "),s("td",[t._v("n/a")]),t._v(" "),s("td",[t._v("三个点 …")])]),t._v(" "),s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("逗号")]),t._v(" "),s("td",[t._v("从左到右")]),t._v(" "),s("td",[t._v("… , …")])])])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"noopener noreferrer"}},[t._v("运算符优先级（MDN）"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=v.exports}}]);