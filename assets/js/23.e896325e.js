(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{306:function(v,_,t){"use strict";t.r(_);var e=t(10),l=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"vue项目性能优化手段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue项目性能优化手段"}},[v._v("#")]),v._v(" Vue项目性能优化手段")]),v._v(" "),_("blockquote",[_("p",[v._v("Vue 项目的性能优化可以从以下几个方面入手：")])]),v._v(" "),_("ol",[_("li",[v._v("减少不必要的模板渲染。")])]),v._v(" "),_("p",[v._v("Vue 的模板渲染是通过虚拟 DOM 实现的，每当状态发生变化时，都会重新渲染模板。因此，需要避免不必要的模板渲染，例如在组件中使用 v-if 和 v-show 来控制组件的显示和隐藏，避免无用组件的渲染。")]),v._v(" "),_("p",[v._v("合理使用Vue的计算属性（computed）和侦听器（watcher）可减少不必要的渲染。\n另外，可用v-if代替v-show，因为v-show会在DOM中保留元素，而v-if会完全销毁和重建元素。")]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("合理使用计算属性和 watch。")])]),v._v(" "),_("p",[v._v("计算属性和 watch 是 Vue 提供的两个特性，可以帮助开发者处理复杂的状态逻辑。在使用计算属性和 watch 时，需要合理使用缓存和立即执行等选项，避免不必要的计算和渲染。")]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("合理使用组件和异步组件。")])]),v._v(" "),_("p",[v._v("Vue 的组件化开发是其优秀的特性之一，可以帮助开发者将复杂的 UI 拆分成小的组件，提高代码的可维护性和可读性。在使用组件时，需要合理使用异步组件和按需加载，避免一次性加载过多的组件，影响应用的加载速度和性能。因此，合理使用Vue的异步组件和路由懒加载可减少首屏加载时间。")]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("合理使用路由懒加载。")])]),v._v(" "),_("p",[v._v("路由懒加载是 Vue Router 提供的一个特性，可以帮助开发者将路由按需加载，从而提高应用的加载速度和性能。在使用路由懒加载时，需要合理划分路由模块，避免一次性加载过多的路由模块。")]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("合理使用第三方库和插件。")])]),v._v(" "),_("p",[v._v("第三方库和插件可以帮助开发者快速实现一些功能，但是也会带来一些额外的性能开销。在使用第三方库和插件时，需要评估其对应用性能的影响，并选择合适的库和插件。")]),v._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[v._v("使用 Webpack 进行打包优化。")])]),v._v(" "),_("p",[v._v("Webpack 是 Vue CLI 默认使用的打包工具，可以帮助开发者对代码进行优化和压缩。在使用 Webpack 打包时，需要合理配置打包选项，例如使用代码分割、压缩代码、去除无用代码等选项，从而提高应用的加载速度和性能。")]),v._v(" "),_("p",[v._v("以上是一些 Vue 项目的常规性能优化手段，补充一些具体措施：")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("使用"),_("code",[v._v("v-if")]),v._v("代替"),_("code",[v._v("v-show")]),v._v("，因为"),_("code",[v._v("v-show")]),v._v("会在DOM中保留元素，而"),_("code",[v._v("v-if")]),v._v("会完全销毁和重建元素。")])]),v._v(" "),_("li",[_("p",[v._v("合理使用Vue的计算属性（computed）和侦听器（watcher）来减少不必要的渲染。")])]),v._v(" "),_("li",[_("p",[v._v("合理使用Vue的异步组件和路由懒加载来减少首屏加载时间。")])]),v._v(" "),_("li",[_("p",[v._v("使用"),_("code",[v._v("v-for")]),v._v("时，为每个项指定唯一的key属性，以便Vue能够更好地跟踪DOM的变化。")])]),v._v(" "),_("li",[_("p",[v._v("避免在模板中使用复杂的表达式，可以将它们提取到计算属性中。")])]),v._v(" "),_("li",[_("p",[v._v("对于频繁被使用的组件，可以使用"),_("code",[v._v("keep-alive")]),v._v("来缓存组件实例，以便下次使用时能够更快地加载。")])]),v._v(" "),_("li",[_("p",[v._v("合理使用Vue的生命周期函数来优化组件的渲染性能。")])]),v._v(" "),_("li",[_("p",[v._v("对于需要频繁更新的数据，可以使用Vue的虚拟滚动等技术来优化性能。")])]),v._v(" "),_("li",[_("p",[v._v("使用CDN来加载Vue和其它第三方库，以减少首屏加载时间。")])]),v._v(" "),_("li",[_("p",[v._v("对于需要频繁操作DOM的场景，可以使用Vue的插件或第三方库来优化性能。")])])])])}),[],!1,null,null,null);_.default=l.exports}}]);